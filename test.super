? Superscript is a language for automating anything, the fun way.
? Let's see an example program for editing my NixOS config.

? Since this is meant to be installed to the system, we need to expose shortcuts
expose [iterate]
? This is also the shortcut that runs when you run via CLI

? Import integrations
use [choose, input] from local:gum
use [run] from github:sspkgs/bash


? To run, use 

define iterate as {
    run("cd ~/nixos")
    var file is choose(run("ls ~/nixos"))
    run("nvim " ++ file )
    ? The ++ is glue. It's like concatenation.
    run("sudo --stdin" ++ input("--password") ++ "sudo nixos-rebuild switch --flake /home/hexatron/nixos#default")
}

? Of course, that's not all Superscript can do. 
? Let's order some groceries!

define groceries as {
    var selected is choose(["apples", "lettuce", "rice", "tacos" "bananas", "tomatoes"])
    var acc is "Person"
    loop over selected {
        ? current references the item bing iterated over
        if current = "tacos" {
            print("taco tuesday!")
        }
        var barcode is run("costco search " ++ selected ++ "--script")
        ? These are just examples, there is no costco cli :(
        run("costco buy " ++ barcode)
    }
}

? You can also loop x number of times:

loop 4 {
    ? ...
}

? Here's everything else Superscript can do:

? Math!
define multiply takes [a, b] as {
    return a*b
    ? There's also +-/*
}

? Call shortcuts!
? This is how integrations work.

define calc as {
    var x is input()
    var y is input()
    call multiply with [x,y]
}

? Logic!

define logic takes [num] as {
    if num = 3 or num = 2 {
        print("1")
    }
    if num = 3 and num = 2 {
        print("what")
    }
    if not num = 3 or not num = 2 {
        print("1")
    }
    if num =/= 3 or num =/= 2 {
        print("1")
    }
    if num > 3 
        print("1")
    }
    if num < 3 {
        print("1")
    }
}